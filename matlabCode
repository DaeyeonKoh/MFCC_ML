clear all;

Audio_Address = 'D:\Patient_DL\All_Audiodata_TRAIN';

Directory1 = dir(fullfile(Audio_Address,'PA_1*.wav'));
Directory2 = dir(fullfile(Audio_Address,'PA_2*.wav'));
Directory3 = dir(fullfile(Audio_Address,'PA_3*.wav'));
% Each directory numbers indicate '1 for NS, 2 for SS, 3 for VS,' respectively.

numBands = 40;
%The number of filter banks is equal to the number of bands. "numBands" can be either 20 or 40.

Freq_range = [0,12000];

ACC = 0;

for i = 1:numel(Directory1)
    F = fullfile(Audio_Address,Directory1(i).name);
    [data1{i},Fs]=audioread(F);
    [samples, channel]=size(data1{i});
    if channel==1
    signal1{i}(:,1)=data1{i}(:,1);
    else    
    signal1{i}(:,1)=(data1{i}(:,1)+data1{i}(:,2))/2;
    end
    win = rectwin(samples);
    fftLength = samples;
    [S,F,t] = stft(signal1{i},Fs, ...
               "Window",win, ...
               "FFTLength",fftLength, ...
               "FrequencyRange","onesided");
    PowerSpectrum = S.*conj(S);

    [fb,cf] = designAuditoryFilterBank(Fs, ...
                                   "FFTLength",fftLength, ...
                                   "NumBands",numBands, ...
                                   "FrequencyRange",Freq_range, ...
                                   "Normalization",'none');
    FilterBank=fb.';
    melSpec = fb*PowerSpectrum;
    melcc = cepstralCoefficients(melSpec,'NumCoeffs',numBands);
    
    MFCC(i+ACC,1) = 1;
    MFCC(i+ACC,2:numBands+1) = melcc;
end

ACC = ACC + numel(Directory1);

for i = 1:numel(Directory2)
    F = fullfile(Audio_Address,Directory2(i).name);
    [data2{i},Fs]=audioread(F);
    [samples, channel]=size(data2{i});
    if channel==1
    signal2{i}(:,1)=data2{i}(:,1);
    else    
    signal2{i}(:,1)=(data2{i}(:,1)+data2{i}(:,2))/2;
    end
    win = rectwin(samples);
    fftLength = samples;
    [S,F,t] = stft(signal2{i},Fs, ...
               "Window",win, ...
               "FFTLength",fftLength, ...
               "FrequencyRange","onesided");
    PowerSpectrum = S.*conj(S);

    [fb,cf] = designAuditoryFilterBank(Fs, ...
                                   "FFTLength",fftLength, ...
                                   "NumBands",numBands, ...
                                   "FrequencyRange",Freq_range, ...
                                   "Normalization",'none');
    FilterBank=fb.';
    melSpec = fb*PowerSpectrum;
    melcc = cepstralCoefficients(melSpec,'NumCoeffs',numBands);
    
    MFCC(i+ACC,1) = 2;
    MFCC(i+ACC,2:numBands+1) = melcc;
end

ACC = ACC + numel(Directory3);

for i = 1:numel(Directory3)
    F = fullfile(Audio_Address,Directory3(i).name);
    [data3{i},Fs]=audioread(F);
    [samples, channel]=size(data3{i});
    if channel==1
    signal3{i}(:,1)=data3{i}(:,1);
    else    
    signal3{i}(:,1)=(data3{i}(:,1)+data3{i}(:,2))/2;
    end
    win = rectwin(samples);
    fftLength = samples;
    [S,F,t] = stft(signal3{i},Fs, ...
               "Window",win, ...
               "FFTLength",fftLength, ...
               "FrequencyRange","onesided");
    PowerSpectrum = S.*conj(S);

    [fb,cf] = designAuditoryFilterBank(Fs, ...
                                   "FFTLength",fftLength, ...
                                   "NumBands",numBands, ...
                                   "FrequencyRange",Freq_range, ...
                                   "Normalization",'none');
    FilterBank=fb.';
    melSpec = fb*PowerSpectrum;
    melcc = cepstralCoefficients(melSpec,'NumCoeffs',numBands);
    
    MFCC(i+ACC,1) = 3;
    MFCC(i+ACC,2:numBands+1) = melcc;
end
